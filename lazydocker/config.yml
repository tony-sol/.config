gui:
  scrollHeight: 2
  language: auto
  theme:
    activeBorderColor:
      - "#ff9e64"
      - "bold"
    inactiveBorderColor:
      - "#27a1b9"
    selectedLineBgColor:
      - "#283457"
    optionsTextColor:
      - "#7aa2f7"
  returnImmediately: false
  wrapMainPanel: true
  expandFocusedSidePanel: true
  showAllContainers: true

logs:
  timestamps: false
  since: ""

commandTemplates:
  dockerCompose: docker-compose
  restartService: '{{ .DockerCompose }} restart {{ .Service.Name }}'
  startService: '{{ .DockerCompose }} start {{ .Service.Name }}'
  stopService: '{{ .DockerCompose }} stop {{ .Service.Name }}'
  serviceLogs: '{{ .DockerCompose }} logs --since=60m --follow {{ .Service.Name }}'
  viewServiceLogs: '{{ .DockerCompose }} logs --follow {{ .Service.Name }}'
  rebuildService: '{{ .DockerCompose }} up -d --build {{ .Service.Name }}'
  recreateService: '{{ .DockerCompose }} up -d --force-recreate {{ .Service.Name }}'
  allLogs: '{{ .DockerCompose }} logs --tail=300 --follow'
  viewAlLogs: '{{ .DockerCompose }} logs'
  dockerComposeConfig: '{{ .DockerCompose }} config'
  checkDockerComposeConfig: '{{ .DockerCompose }} config --quiet'
  serviceTop: '{{ .DockerCompose }} top {{ .Service.Name }}'

customCommands:
  containers:
    - name: shell
      attach: true
      command: 'docker exec -it {{ .Container.ID }} sh'
    - name: kill
      attach: false
      command: 'docker kill {{ .Container.ID }}'

oS:
  openCommand: open {{filename}}
  openLinkCommand: open {{link}}

stats:
  graphs:
    - caption: CPU (%)
      statPath: DerivedStats.CPUPercentage
      color: blue
    - caption: Memory (%)
      statPath: DerivedStats.MemoryPercentage
      color: green
