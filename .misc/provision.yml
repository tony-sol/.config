---
- name: Clone configs
  become: false
  gather_facts: true
  hosts: localhost
  connection: local
  tags:
    - environment
  vars:
    the_user: "{{ ansible_user_id }}"
    ansible_remote_tmp: /tmp
  tasks:
    - name: Clone configs from Github
      git:
        recursive: true
        repo: https://github.com/tony-sol/.config.git
        dest: ~/.config
      register: repo_clone
      failed_when:
        - repo_clone.failed
        - not 'Local modifications exist in the destination' in repo_clone.msg

    - name: Remove existing shell files
      file:
        path: "~/{{ item }}"
        state: absent
      loop:
        - .zshrc
        - .zprofile
        - .bashrc
        - .bash_profile
        - .bash_history
        - .profile

    - name: Link env to shell
      file:
        src: .config/zsh/.zshenv
        dest: ~/.zshenv
        state: link

    - name: Ensure base xdg-spec _HOMEs
      file:
        path: "~/{{ item }}"
        state: directory
      loop:
        - .cache
        - .config
        - .local/bin
        - .local/share
        - .local/state

- name: Install everything
  become: false
  gather_facts: true
  hosts: localhost
  connection: local
  tags:
    - packages
  tasks:
    - name: Ensure brew is installed
      become: true
      stat:
        path: "{{ item }}"
      loop:
        - /opt/homebrew/bin/brew
        - /usr/local/bin/brew
      register: brew

    - name: Install brew
      shell: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      when:
        - brew.results | selectattr("stat.exists") | list | length < 1

    - name: Install everything
      shell: brew bundle install --file ~/.config/homebrew/Brewfile --no-lock --force

- name:
  become: false
  gather_facts: true
  hosts: localhost
  connection: local
  tags:
    - settings
  vars:
    the_user: "{{ ansible_user_id }}"
    ansible_remote_tmp: /tmp
  tasks:
    - name: Enable TouchId in terminal
      become: True
      when: ansible_facts['os_family'] == "Darwin"
      lineinfile:
        state: present
        path: /etc/pam.d/sudo_local
        create: True
        insertafter: EOF
        line: |
          auth    optional    /opt/homebrew/lib/pam/pam_reattach.so
          auth    sufficient  pam_tid.so
          auth    sufficient  /opt/homebrew/lib/pam/pam_u2f.so cue

    - name: Enable homebrew zsh for chsh
      become: True
      when: ansible_facts['os_family'] == "Darwin"
      lineinfile:
        state: present
        path: /etc/shells
        insertafter: EOF
        line: >-
          /opt/homebrew/bin/zsh

    - name: Enable homebrew zsh as default shell
      become: true
      when: ansible_facts['os_family'] == "Darwin"
      user:
        name: "{{ the_user }}"
        shell: /opt/homebrew/bin/zsh
